// This is your Prisma schema file
// Learn more at https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  customer
  delivery
}

enum OrderStatus {
  pending
  preparing
  delivering
  delivered
  cancelled
}

enum PaymentStatus {
  pending
  paid
  failed
  refunded
}

enum MessageType {
  feedback
  support
  inquiry
}

enum FeedbackType {
  product
  delivery
  service
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(customer)
  region    String?
  town      String?
  phone     String?
  orders    Order[]
  messages  Message[]
  feedbacks Feedback[]
  payments  Payment[]
  createdAt DateTime @default(now())
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  image       String
  stock       Int
  category    String?
  feedbacks   Feedback[]
  createdAt   DateTime @default(now())
}

model Order {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  items     Json
  total     Float
  status    OrderStatus @default(pending)
  address   String?
  payment   Payment?
  createdAt DateTime    @default(now())
}

model Payment {
  id        String        @id @default(cuid())
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  order     Order?        @relation(fields: [orderId], references: [id])
  orderId   String?
  amount    Float
  status    PaymentStatus @default(pending)
  method    String?
  createdAt DateTime      @default(now())
}

model Message {
  id        String      @id @default(cuid())
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?
  content   String
  response  String?
  status    String      // open | closed
  type      MessageType @default(support)
  createdAt DateTime    @default(now())
}

model Feedback {
  id        String       @id @default(cuid())
  user      User         @relation(fields: [userId], references: [id])
  userId    String
  product   Product?     @relation(fields: [productId], references: [id])
  productId String?
  type      FeedbackType @default(product)
  rating    Int?
  comment   String?
  status    String?      // open | closed | resolved
  createdAt DateTime     @default(now())
}
